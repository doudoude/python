# -*- coding: utf-8 -*-
"""
Created on Tue Apr 16 09:36:46 2019


@author: Administrator
"""

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
from sklearn.model_selection import train_test_split
df=pd.read_csv("E:/loan explore/loan.csv",nrows=1000)
original_df=df.copy()
df.head()
df
df.shape

#删除缺失值多的
df.id.describe()               #对某列进行描述
#  Where 条件过滤：data[data['columnname'] >condition]

df['id'][:9]             #选取列
df.dropna(axis=1,how='all')       #删除整列都为na的列， how='any'则删除所有包含na的列
df1=df.dropna(axis=1,thresh=600)               #得到至少600个非空值的列
df.dropna(subset=['settlement_percentage']) #删除s_p为 空的行
df1

#填充缺失值
df1.isnull().values.any()      #检查所有数据中是否有缺失值
lie=df1.isnull().any(axis=0)         #检查哪些列有缺失值,axis=1检查哪些行有缺失
df1[df1.isnull().values==True]  #df1中包含nan 的所有行
lie1=lie[lie.values==True]    #有缺失值的列名   
lie1
df1[lie1.index]
df1.emp_title=df1.emp_title.fillna(' ')     #把emp_tiele一列用空格填充
df1.emp_length=df1.emp_length.fillna('0 years') #把emplength用0 years 填充
df1.title=df1.title.fillna(' ') 
df1.mths_since_rcnt_il=df1.mths_since_rcnt_il.fillna(df1.mths_since_rcnt_il.mean())
df1.il_util.fillna(df1.il_util.mean(),inplace=True)
df1.bc_open_to_buy.fillna(df1.bc_open_to_buy.mean(),inplace=True)
df1.fillna(method='ffill',inplace=True)    #剩下的所有数值向前填充
df1

#修改
"""
    # 增加列头
column_names= ['id', 'name', 'age', 'weight','m0006','m0612','m1218','f0006','f0612','f1218']
df = pd.read_csv('../data/patient_heart_rate.csv', names = column_names)

data['movie_title'].str.upper()           改大写
data['movie_title'].str.strip()           末尾空格
    # 切分名字，删除源数据列
df[['first_name','last_name']] = df['name'].str.split(expand=True)
df.drop('name', axis=1, inplace=True)
    #单位不统一：
rows_with_lbs = df['weight'].str.contains('lbs').fillna(False)
df[rows_with_lbs]
# 将 lbs 的数据转换为 kgs 数据
for i,lbs_row in df[rows_with_lbs].iterrows():
    weight = int(float(lbs_row['weight'][:-3])/2.2)
    df.at[i,'weight'] = '{}kgs'.format(weight) 
    #重复数据
    检查重复数据： 
    df1.duplicated('title')
pd.unique(df1.title)
    
    # 删除重复数据行（f_n和l_n相等）
df.drop_duplicates(['first_name','last_name'],inplace=True)
"""

df1=df1.rename(columns={'loan_amnt':'loan_amount'})      #重命名
df1

#保存
df1.to_csv('clean_loan.csv',encoding='utf-8')

df.columns.values
df.info()
df.describe()
df.describe(include=['object'])
loan_amnt=df.loc[:,['loan_amnt']]
issue_d=df.loc[:,['issue_d']]
year_amnt=df.loc[:,['issue_d','loan_amnt']]
pd.value_counts(loan_amnt)
print df.loc[:,'loan_status']
pd.value_counts(df.loc[:,'loan_status'])
states=pd.unique(df.loc[:,'addr_state'])

   
